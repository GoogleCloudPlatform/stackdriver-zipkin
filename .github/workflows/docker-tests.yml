name: Continuous Build Docker
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-zipkin-gcp:
    name: Build Zipkin GCP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 10
      # Remove apt repos that are known to break from time to time.
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Remove broken apt repos [Ubuntu]
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
      # Setup latest JDK. We do this to ensure users don't need to use the same version as our
      # release process. Release uses JDK 11, the last version that can target 1.6 bytecode.
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Cache NPM Packages
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-packages-${{ runner.os }}-${{ hashFiles('zipkin-lens/package-lock.json') }}
      - name: Cache Maven Modules
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: m2-repository-${{ hashFiles('**/pom.xml') }}
      - name: Cache Maven Wrapper
        uses: actions/cache@v1
        with:
          path: .mvn/wrapper
          key: mvn-wrapper-${{ hashFiles('.mvn/wrapper/maven-wrapper.properties') }}
      - name: Show version
        run: ./mvnw -version
        shell: bash
      - name: Execute Zipkin GCP Build
        run: ./mvnw -T1C -q --batch-mode -DskipTests -Dlicense.skip=true clean package
        shell: bash
        env:
          CI: true
      - uses: actions/upload-artifact@v2
        with:
          name: zipkin-gcp-jars
          if-no-files-found: error
          path: |
                ./module/storage-stackdriver/target/zipkin-module-storage-stackdriver-*-module.jar
  build-and-verify-docker:
    name: Build and verify Docker image
    needs: build-zipkin-gcp
    runs-on: ubuntu-latest
    steps:
      # Remove apt repos that are known to break from time to time.
      # See https://github.com/actions/virtual-environments/issues/323
      - name: Remove broken apt repos
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
      - name: Install Docker
        uses: docker-practice/actions-setup-docker@master
        with:
          docker_version: 19.03
          # Avoid pulling image from Docker Hub as it would consume pull quota
          docker_buildx: false
      - name: Cache docker
        uses: actions/cache@v1
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: ${{ runner.os }}-docker
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/download-artifact@v2
        with:
          name: zipkin-gcp-jars
      - name: Build Docker image openzipkin/zipkin-gcp:test
        run:  docker/build_image openzipkin/zipkin-gcp:test
      - name: Verify Docker image openzipkin/zipkin-gcp:test
        run: |
          # This just makes sure containers run and the HEALTHCHECK works (for now..)
          COMPOSE_FILE=./.github/workflows/docker/docker-compose.test.yml
          docker-compose -f "${COMPOSE_FILE}" up -d --quiet-pull
          docker/bin/block-on-health sut || (docker logs sut && exit 1)
